version: 2.1
commands:
  destroy-environmet:
    steps:
      - run: 
          name: Destroy Environment
          when: on_fail
          command:
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  # Create Infrastructure with CloudFormation
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          yum install -y tar gzip
          aws cloudformation create-stack \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --template-body file://ec2.yml \
            --parameters file://param.json \
            --region $AWS_DEFAULT_REGION
          echo "[all]" > ~/inventory
          sleep 100
          aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Project,Values=Udacity" --output text >> ~/inventory
          cat ~/inventory
      - persist_to_workspace:
          root: ~/  
          paths: 
            - inventory
  # Configure Infrastrcuture with Ansible
  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.16
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
            fingerprints: ["ca:0e:3c:d2:b0:fe:9f:c9:28:50:75:17:20:b3:3f:a3"]
      - run: 
          name: Install Ansible
          command: |
            apk add --update ansible
            cat ~/inventory
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i ~/inventory main.yml -vvv
  # smoke test
  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install tar
          command: |
            yum install -y tar gzip
      - attach_workspace:
          at: ~/   
      - run:
          name: Get Public IP address of server
          command: |
            tail -n 1 ~/inventory > url
      - run:
          name: Install curl  
          command: |  
            yum install curl -y
      - run: 
          name: smoke test
          command: |  
            # test if website exists
            if curl -s --head http://$(cat url):3000 # remove port 3000 to simulate a failure
            then 
              exit 0
            else 
              exit 1
            fi
      - destroy-environmet
  
workflows:
  my_workflow:
    jobs:
      - create-infrastructure  
      - configure-infrastructure:
          requires: 
            - create-infrastructure
      - smoke-test:
          requires:
            - configure-infrastructure
